import { K8sModelCommon, useK8sWatchResource } from '@openshift/dynamic-plugin-sdk-utils';
import { Alert, AlertVariant, Button } from '@patternfly/react-core';
import * as React from 'react';
import { ProjectKind } from '~/k8sTypes';

const errorMessage = (e: unknown): string =>
  (typeof e === 'object' ? e?.toString() : typeof e === 'string' ? e : '') || '';

const ProjectModel: K8sModelCommon = {
  apiVersion: 'v1',
  apiGroup: 'project.openshift.io',
  kind: 'Project',
  plural: 'projects',
};
const TestPage = () => {
  new Object();
  const [limit, setLimit] = React.useState(100);
  const [projects, loaded, error] = useK8sWatchResource<ProjectKind[]>(
    {
      groupVersionKind: {
        group: 'project.openshift.io',
        version: 'v1',
        kind: 'Project',
      },
      limit,
      isList: true,
    },
    ProjectModel,
  );
  return (
    <>
      <div>
        <Button onClick={() => setLimit((l) => l + 1)}>Update</Button>
      </div>
      {!loaded ? <div>Loading...</div> : null}
      {error ? (
        <Alert
          title="An error occurred"
          variant={AlertVariant.danger}
          isInline
          className="pf-u-mb-lg"
        >
          {errorMessage(error)}
        </Alert>
      ) : null}
      <ol>
        {Array.isArray(projects)
          ? projects.map((p) => <li key={p.metadata.name}>{p.metadata.name}</li>)
          : null}
      </ol>
    </>
  );
};

export default TestPage;
